[tool:pytest]
markers =
    asyncio: marks tests as async (deselect with '-m "not asyncio"')
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Asyncio configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning:pydantic.*
    ignore::DeprecationWarning:PyPDF2.*
    ignore::DeprecationWarning:httpx.*

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage configuration (if using pytest-cov)
addopts =
    --strict-markers
    --disable-warnings
    -v

# Environment configuration for tests
[pytest]
env =
    TESTING=true

# Coverage settings for SonarQube integration
[coverage:run]
source = app
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */conftest.py
    */migrations/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
